<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--配置Spring的IoC，把service对象配置进来-->
    <bean id="accountService" class="project.service.Impl.AccountServiceImpl"></bean>
    <bean id="lgger" class="project.utils.Logger"></bean>
    <!--    配置AOP-->
    <aop:config>
        <aop:pointcut id="pt1"
                      expression="execution(* project.service.Impl.*.*(..))"/>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="lgger">
            <!--建立通知的类型，并且建立通知方法和切入点方法的关联-->
            <!--<aop:before method="beforePrintLog"
                        pointcut="execution(* project.service.Impl.AccountServiceImpl.saveAccount(..))"></aop:before>

            <aop:before method="beforePrintLog" pointcut-ref="pt1"></aop:before>

            <aop:after-returning method="afterReturningPrintLog"
                                 pointcut="execution(* project.service.Impl.AccountServiceImpl.saveAccount(..))"></aop:after-returning>
            <aop:after-throwing method="afterThrowingPrintLog"
                                pointcut="execution(* project.service.Impl.AccountServiceImpl.saveAccount(..))"></aop:after-throwing>
            <aop:after method="afterPrintLog"
                       pointcut="execution(* project.service.Impl.AccountServiceImpl.saveAccount(..))"></aop:after>
   -->
<!--            配置环绕通知-->
        <aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>
    </aop:config>


</beans>